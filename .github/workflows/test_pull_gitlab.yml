# This is a basic workflow to help you get started with Actions

name: Test Pull GitLab

on:          
  push:
    #branches: [ master ]
    paths-ignore:
      - '.github/**'      
      - 'badges/*'      
      - 'pom.xml'
      - '*.svg'
      - '*.json'
      - '*.md'
  workflow_dispatch: 
  
env:
  MANAGE_BRANCH: main  
  GITLAB_REPO: git.g-able.com/ais-esaving/service-a.git
  GITLAB_HOME_PATH: service-a
  POM_VERSION_LINE_NUMBER: 13
  ARTIFACT_NAME: api-demo-service-a
  CONTAINER_REGISTRY : gableesaving.azurecr.io
  CONTAINER_REPO: gableesaving.azurecr.io/api-demo-service-a
  
jobs:
  generate-version:
    runs-on: ubuntu-latest    
    
    steps:
      - name: Checkout from GitLab
        run: | 
          git clone https://${{ secrets.GITLAB_USERNAME }}:${{ secrets.GITLAB_TOKEN }}@${{ env.GITLAB_REPO }}
          ls -l
          
      - name: Generate new version
        run: | 
            pwd
            cd ${{ env.GITLAB_HOME_PATH }}
            pwd
            ls -l
            git switch ${{ env.MANAGE_BRANCH }}
            git pull
            cur_version=$(head -${{ env.POM_VERSION_LINE_NUMBER }} pom.xml|tail -1|grep -oPm1 "(?<=<version>)[^<]+")
            echo "cur_version=${cur_version}"
            major_version=$(echo ${cur_version}|awk -F'.' '{print($1)}')
            minor_version=$(echo ${cur_version}|awk -F'.' '{print($2)}')
            build_version=$(echo ${cur_version}|awk -F'.' '{print($3)}')
            ((new_build_version=build_version+1))
            new_version=${major_version}.${minor_version}.${new_build_version}
            echo "new_version=${new_version}"
            mkdir version
            echo CUR_VERSION=${cur_version} > version/version.txt
            echo NEW_VERSION=${new_version} >> version/version.txt
            sed -i ${{ env.POM_VERSION_LINE_NUMBER }}"s/<version>${cur_version}<\/version>/<version>${new_version}<\/version>/" pom.xml  
            cp pom.xml version/
            
            
      - name: Upload version artifact
        uses: actions/upload-artifact@v1
        with:
          name: version          
          path: ${{ env.GITLAB_HOME_PATH}}/version
          

